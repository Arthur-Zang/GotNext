{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Team from \"./Team\";\nimport HeightSpacer from \"../Reusable/HeightSpacer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Queue() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    team = _useState2[0],\n    setTeam = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    teamArray = _useState4[0],\n    setTeamArray = _useState4[1];\n  var handleAddTeam = function handleAddTeam() {\n    Keyboard.dismiss();\n    setTeamArray([].concat(_toConsumableArray(teamArray), [team]));\n    setTeam('');\n  };\n  var finishedGame = function finishedGame(index) {\n    var itemsCopy = _toConsumableArray(teamArray);\n    itemsCopy.splice(index, 1);\n    setTeamArray(itemsCopy);\n  };\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      children: _jsx(ScrollView, {\n        style: queueStyles.scrollView,\n        contentContainerStyle: queueStyles.scrollViewContent,\n        children: _jsx(View, {\n          style: queueStyles.teamsWrapper,\n          children: _jsx(View, {\n            style: queueStyles.items,\n            children: teamArray.map(function (team, index) {\n              return _jsx(Pressable, {\n                onPress: function onPress() {\n                  return finishedGame(index);\n                },\n                children: _jsx(Team, {\n                  text: team\n                })\n              }, index);\n            })\n          })\n        })\n      })\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: \"padding\",\n      style: queueStyles.teamNameWrapper,\n      children: [_jsx(TextInput, {\n        style: queueStyles.input,\n        placeholder: \"Give a team name\",\n        value: team,\n        onChangeText: function onChangeText(text) {\n          return setTeam(text);\n        }\n      }), _jsx(Pressable, {\n        onPress: handleAddTeam,\n        children: _jsx(View, {\n          style: queueStyles.addWrapper,\n          children: _jsx(Text, {\n            style: queueStyles.addText,\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar queueStyles = StyleSheet.create({\n  scrollViewContent: {\n    flexGrow: 1,\n    justifyContent: 'space-between',\n    paddingBottom: 20\n  },\n  teamsWrapper: {\n    paddingHorizontal: 20,\n    height: 500\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  items: {\n    height: '100%'\n  },\n  teamNameWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    backgroundColor: '#FFF',\n    borderTopWidth: 1,\n    borderTopColor: '#C0C0C0'\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  addText: {\n    fontSize: 24\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","Pressable","KeyboardAvoidingView","Keyboard","ScrollView","Team","HeightSpacer","jsx","_jsx","jsxs","_jsxs","Queue","_useState","_useState2","_slicedToArray","team","setTeam","_useState3","_useState4","teamArray","setTeamArray","handleAddTeam","dismiss","concat","_toConsumableArray","finishedGame","index","itemsCopy","splice","children","style","queueStyles","scrollView","contentContainerStyle","scrollViewContent","teamsWrapper","items","map","onPress","text","behavior","teamNameWrapper","input","placeholder","value","onChangeText","addWrapper","addText","create","flexGrow","justifyContent","paddingBottom","paddingHorizontal","height","sectionTitle","fontSize","fontWeight","flexDirection","alignItems","paddingVertical","backgroundColor","borderTopWidth","borderTopColor","borderRadius","borderColor","borderWidth","width"],"sources":["C:/Users/invic/Downloads/react-native-travel-app-starter-main/react-native-travel-app-starter-main/GotNext/components/Home/Queue.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Pressable, KeyboardAvoidingView, Keyboard, ScrollView } from 'react-native';\r\nimport Team from './Team';\r\nimport HeightSpacer from '../Reusable/HeightSpacer';\r\n\r\nexport default function Queue() {\r\n  const [team, setTeam] = useState('');\r\n  const [teamArray, setTeamArray] = useState([]);\r\n\r\n  const handleAddTeam = () => {\r\n    Keyboard.dismiss();\r\n    setTeamArray([...teamArray, team]);\r\n    setTeam('');\r\n  };\r\n\r\n  const finishedGame = (index) => {\r\n    let itemsCopy = [...teamArray];\r\n    itemsCopy.splice(index, 1);\r\n    setTeamArray(itemsCopy);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {/* Queue */}\r\n      <View>\r\n        <ScrollView style={queueStyles.scrollView} contentContainerStyle={queueStyles.scrollViewContent}>\r\n          {/* Queue */}\r\n          <View style={queueStyles.teamsWrapper}>\r\n            <View style={queueStyles.items}>\r\n              {teamArray.map((team, index) => (\r\n                <Pressable key={index} onPress={() => finishedGame(index)}>\r\n                  <Team text={team} />\r\n                </Pressable>\r\n              ))}\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n      {/* Create a team */}\r\n      <KeyboardAvoidingView behavior=\"padding\" style={queueStyles.teamNameWrapper}>\r\n        <TextInput\r\n          style={queueStyles.input}\r\n          placeholder=\"Give a team name\"\r\n          value={team}\r\n          onChangeText={(text) => setTeam(text)}\r\n        />\r\n\r\n        <Pressable onPress={handleAddTeam}>\r\n          <View style={queueStyles.addWrapper}>\r\n            <Text style={queueStyles.addText}>+</Text>\r\n          </View>\r\n        </Pressable>\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst queueStyles = StyleSheet.create({\r\n  scrollViewContent: {\r\n    flexGrow: 1,\r\n    justifyContent: 'space-between',\r\n    paddingBottom: 20,\r\n    },\r\n  teamsWrapper: {\r\n    paddingHorizontal: 20,\r\n    height: 500,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  items: {\r\n    height: '100%',\r\n  },\r\n  teamNameWrapper: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    backgroundColor: '#FFF',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#C0C0C0',\r\n  },\r\n  input: {\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: '#FFF',\r\n    borderRadius: 60,\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    width: 250,\r\n  },\r\n  addWrapper: {\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: '#FFF',\r\n    borderRadius: 60,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n  },\r\n  addText: {\r\n    fontSize: 24,\r\n  },\r\n});"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,IAAI;AACX,OAAOC,YAAY;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC9B,IAAAC,SAAA,GAAwBhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAAkCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1BlB,QAAQ,CAACmB,OAAO,CAAC,CAAC;IAClBF,YAAY,IAAAG,MAAA,CAAAC,kBAAA,CAAKL,SAAS,IAAEJ,IAAI,EAAC,CAAC;IAClCC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,IAAMS,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;IAC9B,IAAIC,SAAS,GAAAH,kBAAA,CAAOL,SAAS,CAAC;IAC9BQ,SAAS,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC1BN,YAAY,CAACO,SAAS,CAAC;EACzB,CAAC;EAED,OACEjB,KAAA,CAACX,IAAI;IAAA8B,QAAA,GAEHrB,IAAA,CAACT,IAAI;MAAA8B,QAAA,EACHrB,IAAA,CAACJ,UAAU;QAAC0B,KAAK,EAAEC,WAAW,CAACC,UAAW;QAACC,qBAAqB,EAAEF,WAAW,CAACG,iBAAkB;QAAAL,QAAA,EAE9FrB,IAAA,CAACT,IAAI;UAAC+B,KAAK,EAAEC,WAAW,CAACI,YAAa;UAAAN,QAAA,EACpCrB,IAAA,CAACT,IAAI;YAAC+B,KAAK,EAAEC,WAAW,CAACK,KAAM;YAAAP,QAAA,EAC5BV,SAAS,CAACkB,GAAG,CAAC,UAACtB,IAAI,EAAEW,KAAK;cAAA,OACzBlB,IAAA,CAACP,SAAS;gBAAaqC,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAMb,YAAY,CAACC,KAAK,CAAC;gBAAA,CAAC;gBAAAG,QAAA,EACxDrB,IAAA,CAACH,IAAI;kBAACkC,IAAI,EAAExB;gBAAK,CAAE;cAAC,GADNW,KAEL,CAAC;YAAA,CACb;UAAC,CACE;QAAC,CACH;MAAC,CACG;IAAC,CACT,CAAC,EAEPhB,KAAA,CAACR,oBAAoB;MAACsC,QAAQ,EAAC,SAAS;MAACV,KAAK,EAAEC,WAAW,CAACU,eAAgB;MAAAZ,QAAA,GAC1ErB,IAAA,CAACR,SAAS;QACR8B,KAAK,EAAEC,WAAW,CAACW,KAAM;QACzBC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAE7B,IAAK;QACZ8B,YAAY,EAAE,SAAAA,aAACN,IAAI;UAAA,OAAKvB,OAAO,CAACuB,IAAI,CAAC;QAAA;MAAC,CACvC,CAAC,EAEF/B,IAAA,CAACP,SAAS;QAACqC,OAAO,EAAEjB,aAAc;QAAAQ,QAAA,EAChCrB,IAAA,CAACT,IAAI;UAAC+B,KAAK,EAAEC,WAAW,CAACe,UAAW;UAAAjB,QAAA,EAClCrB,IAAA,CAACV,IAAI;YAACgC,KAAK,EAAEC,WAAW,CAACgB,OAAQ;YAAAlB,QAAA,EAAC;UAAC,CAAM;QAAC,CACtC;MAAC,CACE,CAAC;IAAA,CACQ,CAAC;EAAA,CACnB,CAAC;AAEX;AAEA,IAAME,WAAW,GAAGlC,UAAU,CAACmD,MAAM,CAAC;EACpCd,iBAAiB,EAAE;IACjBe,QAAQ,EAAE,CAAC;IACXC,cAAc,EAAE,eAAe;IAC/BC,aAAa,EAAE;EACf,CAAC;EACHhB,YAAY,EAAE;IACZiB,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE;EACV,CAAC;EACDC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDpB,KAAK,EAAE;IACLiB,MAAM,EAAE;EACV,CAAC;EACDZ,eAAe,EAAE;IACfgB,aAAa,EAAE,KAAK;IACpBP,cAAc,EAAE,cAAc;IAC9BQ,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,EAAE;IACnBP,iBAAiB,EAAE,EAAE;IACrBQ,eAAe,EAAE,MAAM;IACvBC,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE;EAClB,CAAC;EACDpB,KAAK,EAAE;IACLiB,eAAe,EAAE,EAAE;IACnBP,iBAAiB,EAAE,EAAE;IACrBQ,eAAe,EAAE,MAAM;IACvBG,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,CAAC;IACdC,KAAK,EAAE;EACT,CAAC;EACDpB,UAAU,EAAE;IACVoB,KAAK,EAAE,EAAE;IACTb,MAAM,EAAE,EAAE;IACVO,eAAe,EAAE,MAAM;IACvBG,YAAY,EAAE,EAAE;IAChBb,cAAc,EAAE,QAAQ;IACxBQ,UAAU,EAAE,QAAQ;IACpBM,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE;EACf,CAAC;EACDlB,OAAO,EAAE;IACPQ,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}